name: Docker Build, Push

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "release/*"

jobs:
  docker:
    env:
      IMAGE: ghcr.io/${{ github.repository }}
      REGISTRY: ghcr.io
      OCI_REPO: "oci://ghcr.io/${{ github.repository_owner }}/manifests/${{ github.event.repository.name }}"
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Prepare
        id: prep
        run: |
          BRANCH=${GITHUB_REF##*/}
          TS=$(date +%s)
          REVISION=${GITHUB_SHA::8}
          BUILD_ID="${BRANCH}-${REVISION}-${TS}"
          LATEST_ID=canary
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            BUILD_ID=${GITHUB_REF/refs\/tags\//}
            LATEST_ID=latest
          fi
          echo BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') >> $GITHUB_OUTPUT
          echo BUILD_ID=${BUILD_ID} >> $GITHUB_OUTPUT
          echo LATEST_ID=${LATEST_ID} >> $GITHUB_OUTPUT

      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@main

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ steps.prep.outputs.BUILD_ID }}
            ${{ env.IMAGE }}:${{ steps.prep.outputs.LATEST_ID }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set image name and digest
        id: set_digest
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '(.images[] | select(.name == "foomtbal")) |= (
              .digest = "${{ steps.docker_build.outputs.digest }}" |
              .newName = "${{ env.IMAGE }}" |
              .newTag = "${{ steps.prep.outputs.BUILD_ID }}"
            )' manifests/kustomization.yml

      - name: Generate manifests
        run: |
          mkdir -p deploy && kustomize build ./manifests > ./deploy/app.yaml

      - name: Push manifests
        run: |
          flux push artifact $OCI_REPO:$(git rev-parse --short HEAD) \
            --path="./deploy" \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)@sha1:$(git rev-parse HEAD)"

      - name: Deploy manifests to staging
        run: |
          flux tag artifact $OCI_REPO:$(git rev-parse --short HEAD) --tag main
